{
	RegisteredRule(rule=totalSupplyNonNegative, ruleType=spec.cvlast.SpecType$Single$FromUser$SpecFile@5436ad87, parentCVLDeclarationId=null, isCounted=true): true,
	RegisteredRule(rule=rule_not_vacuous, ruleType=VacuityCheck(originalRule=CVLSingleRule(ruleIdentifier=totalSupplyNonNegative, range=ERC3525.spec:1:1, params=[], description=, goodDescription=, block=[Declaration(range=ERC3525.spec:2:5, cvlType=env, id=e, scope=(Spec file -> Rule totalSupplyNonNegative)), Assert(range=ERC3525.spec:3:5, exp=ERC3525.totalSupply(e) >= 0, description=totalSupply(e) >= 0, scope=(Spec file -> Rule totalSupplyNonNegative), invariantPostCond=false)], ruleType=spec.cvlast.SpecType$Single$FromUser$SpecFile@5436ad87, scope=(Spec file -> Rule totalSupplyNonNegative), methodParamFilters=MethodParamFilters(range=ERC3525.spec:1:1, scope=(Spec file -> Rule totalSupplyNonNegative), methodParamToFilter={}), ruleGenerationMeta=WithSanity(sanity=PRE_SANITY_CHECK), isSatisfyRule=false)), parentCVLDeclarationId=totalSupplyNonNegative, isCounted=true): true
}